{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","AppReducer","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","getTransactions","a","axios","get","res","data","response","id","delete","newTransaction","config","headers","post","Provider","value","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","useContext","console","log","total","map","amount","reduce","acc","item","toFixed","IncomeExpense","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","floor","random","parseInt","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8712da8f.chunk.js","sourcesContent":["export const Header = () => {\n    return (\n        <h2>\n            Expense Tracker\n        </h2>\n    )\n}\n","const AppReducer = (state, action) => {\n    // console.log(state)\n    // console.log(action.type)\n    switch(action.type) {\n        case 'GET_TRANSACTIONS':\n            return {\n                ...state,\n                loading: false,\n                transactions: action.payload\n            }\n        case 'DELETE_TRANSACTION':\n            // You should also avoid doing direct state-mutations(never mutate state), in redux as this will lead to side-effects. \n            // Always try to create a deep-clone or copy of the state(spread operator) if you plan on doing some sort of mutation (deletion, update)\n            return {\n                ...state,\n                transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n            }\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                // transactions: [ction.payload]\n                transactions: [...state.transactions, action.payload]\n            }\n        case 'TRANSACTION_ERROR':\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default AppReducer","import React, { createContext, useReducer }from 'react'\nimport AppReducer from './AppReducer';\nimport axios from 'axios'\n\n\n// Initial State for testing\n// const initialState = {\n//     transactions: [\n//           { id: 1, text: 'Flower', amount: -20 },\n//           { id: 2, text: 'Salary', amount: 300 },\n//           { id: 3, text: 'Book', amount: -10 },\n//           { id: 4, text: 'Camera', amount: 150 }\n//     ]\n// }\n\nconst initialState = {\n    transactions: [],\n    error: null,\n    loading: true\n}\n\n// Create context (global)\nexport const GlobalContext = createContext(initialState);\n\n// Create provider component, this allows other components to access our initial state\nexport const GlobalProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // Actions to call the reducer\n\n    async function getTransactions() {\n        try {\n            // http://localhost:5000/api/v1/transaction since we added the proxy to our package.json, we only needed the /api/v1/transaction part\n            const res = await axios.get('/api/v1/transaction') \n            // res.data will get our whole object, including success, count, data\n            \n            dispatch({\n                type: 'GET_TRANSACTIONS',\n                payload: res.data.data\n            })\n\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            })\n        }\n    }\n\n    async function deleteTransaction(id) {\n        try {\n            await axios.delete(`/api/v1/transaction/${id}`)\n            \n            dispatch({\n                type: 'DELETE_TRANSACTION',\n                payload: id\n            }); \n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n   \n    }\n\n    async function addTransaction (newTransaction){\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        try {\n            const res = await axios.post('/api/v1/transaction', newTransaction, config)\n\n            dispatch({\n                type: 'ADD_TRANSACTION',\n                // payload: newTransaction \n                // we send our data (newTransaction) from res object\n                payload: res.data.data\n            })\n        } catch (error) {\n            dispatch({\n                type: 'TRANSACTION_ERROR',\n                payload: error.response.data.error\n            });\n        }\n\n\n    }\n    \n    return (\n    <GlobalContext.Provider value={{ transactions: state.transactions, error: state.error, loading: state.loading, getTransactions, deleteTransaction, addTransaction, getTransactions }}>\n        {children}\n    </GlobalContext.Provider>);\n}\n\n","export function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }","import { GlobalContext } from '../context/GlobalState'\nimport { useContext } from 'react'\nimport { numberWithCommas } from '../utils/format'\n\n\nexport const Balance = () => {\n\n    const { transactions }  = useContext(GlobalContext);\n    console.log(transactions)\n    const amounts = transactions.map(transaction => transaction.amount);\n    const total = amounts.reduce((acc, item) => (acc + item), 0).toFixed(2); // or amounts.reduce((acc, item) => (acc += item), 0)\n\n\n    return (\n        <div>\n            <h4>Your Balance</h4>\n            <h1>${numberWithCommas(total)}</h1>\n        </div>\n    )\n}\n","import { GlobalContext } from '../context/GlobalState'\nimport { useContext } from 'react'\nimport { numberWithCommas } from '../utils/format'\n\n\nexport const IncomeExpense = () => {\n\n    const { transactions }  = useContext(GlobalContext);\n\n    const amounts = transactions.map(transaction => transaction.amount);\n\n    const income = amounts.filter(item => item > 0).reduce((acc, item) => (acc + item), 0).toFixed(2);\n\n    const expense = amounts.filter(item => item < 0).reduce((acc, item) => (acc + item), 0).toFixed(2) * -1;\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n            <h4>Income</h4>\n            <p className=\"money plus\">{numberWithCommas(income)}</p>\n            </div>\n            <div>\n            <h4>Expense</h4>\n            <p className=\"money minus\">{numberWithCommas(expense)}</p>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState'\nimport { numberWithCommas } from '../utils/format'\n\nexport const Transaction = ({ transaction }) => {\n\n    const sign = transaction.amount < 0 ? '-' : '+';\n    const { deleteTransaction } = useContext(GlobalContext);\n\n    return (\n            <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n                {transaction.text} <span>{sign}${numberWithCommas(Math.abs(transaction.amount))}</span><button onClick={() => deleteTransaction(transaction._id)} className=\"delete-btn\">x</button>\n            </li>\n    )\n}\n","import { GlobalContext } from '../context/GlobalState'\nimport { useContext , useEffect } from 'react'\nimport { Transaction } from './Transaction'\n\nexport const TransactionList = () => {\n\n    // const context = useContext(GlobalContext);\n    // console.log(context)\n    // console.log(context.transactions)\n    const { transactions, getTransactions }  = useContext(GlobalContext);\n    // console.log(transactions)\n\n    useEffect(() => {\n        getTransactions();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <div>\n            <h3>History</h3>\n            <ul className=\"list\">\n            {transactions.map(transaction => <Transaction key={transaction.id} transaction={transaction} />)}\n            </ul>\n        </div>\n    )\n}\n","import { useState , useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\n\n\nexport const AddTransaction = () => {\n\n    // declare component level state\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0);\n    const { addTransaction } = useContext(GlobalContext);\n\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        // create a newTransaction object and pass to our addTransaction()function\n        const newTransaction = {\n            id: Math.floor(Math.random() * 100000000),\n            text,\n            amount: parseInt(amount)\n        }\n\n        addTransaction(newTransaction);\n    }\n\n\n    return (\n        <div>\n            <h3>Add new transaction</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                <label htmlFor=\"text\">Text</label>\n                <input type=\"text\" value={text} onChange={(e)=> setText(e.target.value)} placeholder=\"Enter text...\" />\n                </div>\n                <div className=\"form-control\">\n                <label htmlFor=\"amount\">Amount \n                <br/>\n                (negative - expense, positive - income) </label>\n                <input type=\"number\" value={amount} onChange={(e)=> setAmount(e.target.value)} placeholder=\"Enter amount...\" />\n                </div>\n                <button className=\"btn\">Add transaction</button>\n            </form>\n        </div>\n    )\n}\n","import './App.css'\nimport { Header } from './components/Header'\nimport { Balance } from './components/Balance'\nimport { IncomeExpense } from './components/IncomeExpense'\nimport { TransactionList } from './components/TransactionList'\nimport { AddTransaction } from './components/AddTransaction'\nimport { GlobalProvider } from './context/GlobalState'\n\n\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}